--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Streams the result of the command from all servers that are the target of the current task. All these streams will be joined into a single one, so you can, say, watch 10 log files as though they were one. Do note that this is quite expensive from a bandwidth perspective, so use it with care.
- !ruby/struct:SM::Flow::P 
  body: "The command is invoked via #invoke_command."
- !ruby/struct:SM::Flow::P 
  body: "Usage:"
- !ruby/struct:SM::Flow::VERB 
  body: "  desc &quot;Run a tail on multiple log files at the same time&quot;\n  task :tail_fcgi, :roles =&gt; :app do\n    stream &quot;tail -f #{shared_path}/log/fastcgi.crash.log&quot;\n  end\n"
full_name: Capistrano::Configuration::Actions::Inspect#stream
is_singleton: false
name: stream
params: (command, options={})
visibility: public
