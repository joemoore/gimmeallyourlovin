--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: This class implements the strategy for deployments which work by preparing the source code locally, compressing it, copying the file to each target host, and uncompressing it to the deployment directory.
- !ruby/struct:SM::Flow::P 
  body: By default, the SCM checkout command is used to obtain the local copy of the source code. If you would rather use the export operation, you can set the :copy_strategy variable to :export.
- !ruby/struct:SM::Flow::VERB 
  body: "  set :copy_strategy, :export\n"
- !ruby/struct:SM::Flow::P 
  body: For even faster deployments, you can set the :copy_cache variable to true. This will cause deployments to do a new checkout of your repository to a new directory, and then copy that checkout. Subsequent deploys will just resync that copy, rather than doing an entirely new checkout. Additionally, you can specify file patterns to exclude from the copy when using :copy_cache; just set the :copy_exclude variable to a file glob (or an array of globs).
- !ruby/struct:SM::Flow::VERB 
  body: "  set :copy_cache, true\n  set :copy_exclude, &quot;.git/*&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: "Note that :copy_strategy is ignored when :copy_cache is set. Also, if you want the copy cache put somewhere specific, you can set the variable to the path you want, instead of merely 'true':"
- !ruby/struct:SM::Flow::VERB 
  body: "  set :copy_cache, &quot;/tmp/caches/myapp&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: This deployment strategy also supports a special variable, :copy_compression, which must be one of :gzip, :bz2, or :zip, and which specifies how the source should be compressed for transmission to each host.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: A struct for representing the specifics of a compression type. Commands are arrays, where the first element is the utility to be used to perform the compression or decompression.
  name: Compression
  value: Struct.new(:extension, :compress_command, :decompress_command)
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: A struct for representing the specifics of a compression type. Commands are arrays, where the first element is the utility to be used to perform the compression or decompression.
  name: Compression
  value: Struct.new(:extension, :compress_command, :decompress_command)
full_name: Capistrano::Deploy::Strategy::Copy
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: check!
- !ruby/object:RI::MethodSummary 
  name: check!
- !ruby/object:RI::MethodSummary 
  name: copy_cache
- !ruby/object:RI::MethodSummary 
  name: copy_cache
- !ruby/object:RI::MethodSummary 
  name: deploy!
- !ruby/object:RI::MethodSummary 
  name: deploy!
name: Copy
superclass: Base
