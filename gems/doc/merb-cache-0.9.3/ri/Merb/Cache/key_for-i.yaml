--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "Compute a cache key based on the given parameters Only used by the #cached_page?, #cached_action?, #cached?, #cache, #cache_get and #cache_set methods"
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "options<String, Hash>:"
    body: The key or the Hash that will be used to build the key
  - !ruby/struct:SM::Flow::LI 
    label: "controller<String>:"
    body: The name of the controller
  - !ruby/struct:SM::Flow::LI 
    label: "controller_based<Boolean>:"
    body: only used by action and page caching
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Options (options)
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: ":key<String>:"
    body: The complete or partial key that will be computed.
  - !ruby/struct:SM::Flow::LI 
    label: ":action<String>:"
    body: The action name that will be used to compute the key
  - !ruby/struct:SM::Flow::LI 
    label: ":controller<String>:"
    body: The controller name that will be part of the key
  - !ruby/struct:SM::Flow::LI 
    label: ":params<Array[String]>:"
    body: The params will be joined together (with '/') and added to the key
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::VERB 
  body: "  cache_set(&quot;my_key&quot;, @data)\n  cache_get(:key =&gt; &quot;root_key&quot;, :params =&gt; [session[:me], params[:id]])\n"
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Returns
- !ruby/struct:SM::Flow::P 
  body: The computed key
full_name: Merb::Cache#key_for
is_singleton: false
name: key_for
params: (options, controller, controller_based = false)
visibility: public
